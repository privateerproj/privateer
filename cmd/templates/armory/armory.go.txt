package armory

import (
	hclog "github.com/hashicorp/go-hclog"
	"github.com/spf13/viper"

	"github.com/privateerproj/privateer-sdk/raidengine"
	"github.com/privateerproj/privateer-sdk/utils"
)

// Conforms to the Armory interface type
type {{ .ServiceName }} struct {
	Tactics map[string][]raidengine.Strike     // Required, allows you to sort which strikes are run for each control
	Log     hclog.Logger                       // Recommended, allows you to set the log level for each log message
	Results map[string]raidengine.StrikeResult // Optional, allows cross referencing between strikes
}

// Optionally, retrieve config variables using Viper.
var user string

func init() {
	user = viper.GetString("user")
}

func (a *{{ .ServiceName }}) SetLogger(loggerName string) hclog.Logger {
	a.Log = raidengine.GetLogger(loggerName, false)
	return a.Log
}

func (a *{{ .ServiceName }}) GetTactics() map[string][]raidengine.Strike {
	return a.Tactics
}

{{- $ServiceName := .ServiceName }}
{{- range .Controls }}
{{- $controlID := .IDFriendly }}
{{- range $trKey, $trValue := .TestRequirements }}
{{- $strikeID := printf "%s_TR%s" $controlID $trKey }}

// -----
// Strike and Movements for {{ $strikeID }} 
// -----

// {{ $strikeID }} conforms to the Strike function type
func (a *{{ $ServiceName }}) {{ $strikeID  }}() (strikeName string, result raidengine.StrikeResult) {
	// set default return values
	strikeName = "{{ $strikeID }}"
	result = raidengine.StrikeResult{
		Passed:      false,
		Description: "{{ $trValue }}",
		Message:     "Strike has not yet started.", // This message will be overwritten by subsequent movements
		DocsURL:     "https://maintainer.com/docs/raids/{{ $ServiceName }}",
		ControlID:   "CCC-Taxonomy-1",
		Movements:   make(map[string]raidengine.MovementResult),
	}

	{{- $testID := printf "%s_T01" $strikeID }}

	{{ $testID }}_Result := {{ $testID }}()
	result.Movements["{{ $testID }}"] = {{ $testID }}_Result
	if !{{ $testID }}_Result.Passed {
		result.Message = {{ $testID }}_Result.Message
		return
	}

	// TODO: Additional movement calls go here

	return
}

func {{ $testID }}() (result raidengine.MovementResult) {
	result = raidengine.MovementResult{
		Description: "JokerName must be found in the runtime configuration.",
		Function:    utils.CallerPath(0),
	}
	
	// TODO: Movement logic goes here
	return
}
{{ end }} {{ end }}